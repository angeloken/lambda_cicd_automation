name: Lambda CI/CD
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
jobs:
  lint-and-test:
    runs-on: self-hosted
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r lambdas/requirements.txt
      - name: Lint with flake8
        run: |
          flake8 lambdas/
      - name: Run tests
        env:
          PYTHONPATH: ./lambdas
        run: |
          pytest tests/
  deploy:
    needs: lint-and-test
    runs-on: self-hosted
    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
          - 4571:4571
        env:
          SERVICES: lambda,s3,iam
          DOCKER_HOST: unix:///var/run/docker.sock
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10' 
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r lambdas/requirements.txt
          sudo apt-get install -y zip
      - name: install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
      - name: Verify AWS CLI Installation
        run: aws --version
      - name: Create IAM role
        env:
          AWS_ACCESS_KEY_ID: mydummy
          AWS_SECRET_ACCESS_KEY: mysecret
        run: |
          aws --endpoint-url=http://localhost:4566 iam create-role --role-name lambda-role --assume-role-policy-document file://assume-role-policy.json || true
      - name: zip lambda functions
        run: |
          chmod +x zip_lambdas.sh
          ./zip_lambdas.sh
      - name: List directory contents
        run: |
          ls -R lambdas/
      - name: Deploy hello-world function to LocalStack
        env:
          AWS_ACCESS_KEY_ID: mydummy
          AWS_SECRET_ACCESS_KEY: mysecret
        run: |
          aws --endpoint-url=http://localhost:4566 lambda create-function --function-name hello-world \
              --runtime python3.10 --role arn:aws:iam::000000000000:role/lambda-role \
              --handler hello_world.handler --zip-file fileb://lambdas/hello_world.zip || \
          aws --endpoint-url=http://localhost:4566 lambda update-function-code --function-name hello-world \
              --zip-file fileb://lambdas/hello_world.zip

      - name: Configure hello-world function environment variables
        env:
          AWS_ACCESS_KEY_ID: mydummy
          AWS_SECRET_ACCESS_KEY: mysecret
        run: |
          aws --endpoint-url=http://localhost:4566 lambda update-function-configuration --function-name hello-world \
              --environment "Variables={DB_HOST=db.example.com, DB_USER=myuser, DB_PASS=mypass}"

      - name: Deploy process-data function to LocalStack
        env:
          AWS_ACCESS_KEY_ID: mydummy
          AWS_SECRET_ACCESS_KEY: mysecret
        run: |
          aws --endpoint-url=http://localhost:4566 lambda create-function --function-name process-data \
              --runtime python3.10 --role arn:aws:iam::000000000000:role/lambda-role \
              --handler process_data.handler --zip-file fileb://lambdas/process_data.zip || \
          aws --endpoint-url=http://localhost:4566 lambda update-function-code --function-name process-data \
              --zip-file fileb://lambdas/process_data.zip

      - name: Configure process-data function environment variables
        env:
          AWS_ACCESS_KEY_ID: mydummy
          AWS_SECRET_ACCESS_KEY: mysecret
        run: |
          aws --endpoint-url=http://localhost:4566 lambda update-function-configuration --function-name process-data \
              --environment "Variables={API_KEY=myapikey, API_SECRET=myapisecret}"
